module.exports = {
  up: async (queryInterface, Sequelize) => {
    const id = [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      184,
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      192,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      210,
      211,
      212,
      213,
      214,
      215,
      216,
      217,
      218,
      219,
      220,
      221,
      222,
      223,
      224,
      225,
      226,
      227,
      228,
      229,
      230,
      231,
      232,
      233,
      234,
      235,
      236,
      237,
      238,
      239,
      240,
      241,
      242,
      243,
      244,
      245,
      246,
      247,
      248,
      249,
      250,
      251,
      252,
      253,
      254,
      255,
      256,
      257,
      258,
      259,
      260,
      261,
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      270,
      271,
      272,
      273,
      274,
      275,
      276,
      277,
      278,
      279,
      280,
      281,
      282,
      283,
      284,
      285,
      286,
      287,
      288,
      289,
      290,
      291,
      292,
      293,
      294,
      295,
      296,
      297,
      298,
      299,
      300,
    ];
    const amount = [
      3000,
      500000,
      30000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      21000,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      5500,
      3000,
      5000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      21000,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      55000,
      3000,
      50000,
      30000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      1000,
      21000,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      55000,
      3000,
      50000,
      30000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      21000,
      700000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      55000,
      3000,
      50000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      21000,
      700,
      50000,
      3500,
      1500,
      13000,
      20000,
      25000,
      5500,
      3000,
      50000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      1000,
      21000,
      70000,
      50000,
      3500,
      1500,
      13000,
      20000,
      25000,
      55000,
      3000,
      5000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      1000,
      21000,
      570,
      50000,
      3500,
      1500,
      13000,
      20000,
      25000,
      55000,
      3000,
      5000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      100,
      21000,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      55000,
      3000,
      5000,
      30000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      21000,
      7000,
      50000,
      3500,
      1500,
      13000,
      20000,
      25000,
      5500,
      3000,
      50000,
      7030,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      2100,
      210000,
      7000,
      50000,
      3500,
      150,
      13000,
      20000,
      2500,
      55000,
      3000,
      500000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      2100,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      25000,
      55000,
      30700,
      54000,
      3700,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      2100,
      70000,
      50000,
      3500,
      15000,
      13000,
      20000,
      2500,
      550,
      3000,
      5000,
      3000,
      10000,
      20000,
      30000,
      40000,
      50000,
      20000,
      70000,
      10000,
      210,
      7000,
      50000,
      3500,
      1500,
      13000,
      20000,
      250000,
      550000,
      3000,
      500000,
      300,
      10000,
      200,
      30000,
      40000,
      50000,
      20000,
      70000,
      100,
      2100,
      700,
      50000,
      3500,
      150000,
      13000,
      20000,
      2500,
      5500,
      3000,
      500000,
      3000,
      10000,
      2000,
      300,
      40000,
      500,
      2000,
      7000,
      100,
      210,
      7000,
      50000,
      3500,
      1500,
      13000,
      2000,
      250,
      5500,
    ];
    const place = [
      '병원비',
      '샴푸',
      '영화',
      '마왕족발',
      '맘스터치',
      '장례식장',
      '소설책',
      '엽기떡볶이',
      '버스비',
      '택시비',
      '택시비',
      '할매국밥',
      '네이버 클라우드 플랫폼',
      '버스비',
      '공차',
      '중국집',
      '도네이션',
      '마왕족발',
      '소설책',
      '버스비',
      '도네이션',
      '네이버 클라우드 플랫폼',
      '도네이션',
      '엽기떡볶이',
      '홈플러스',
      '도네이션',
      '할매국밥',
      '샴푸',
      '맘스터치',
      '통신요금',
      '별풍선',
      '막걸리',
      '네이버 클라우드 플랫폼',
      '스타벅스',
      '홈플러스',
      '파리바게트',
      '별풍선',
      '버스비',
      '롯데월드',
      '엽기떡볶이',
      '공차',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '할매국밥',
      '인프런',
      '장례식장',
      '택시비',
      '롯데월드',
      '할매국밥',
      '영화',
      '샴푸',
      '파리바게트',
      '롯데월드',
      '도네이션',
      '별풍선',
      '공차',
      '스타벅스',
      '공차',
      '공차',
      '택시비',
      '버스비',
      '소설책',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '병원비',
      '인프런',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '통신요금',
      '별풍선',
      '장례식장',
      '롯데월드',
      '공차',
      '통신요금',
      '엽기떡볶이',
      '롯데월드',
      '택시비',
      '축의금',
      '축의금',
      '병원비',
      '병원비',
      '막걸리',
      '이마트',
      '영화',
      '호식이두마리치킨',
      '인프런',
      '맘스터치',
      '할매국밥',
      '이마트',
      '엽기떡볶이',
      '롯데월드',
      '축의금',
      '샴푸',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '소설책',
      '별풍선',
      '야구 관람',
      '마왕족발',
      '네이버 클라우드 플랫폼',
      '병원비',
      '샴푸',
      '영화',
      '마왕족발',
      '맘스터치',
      '장례식장',
      '소설책',
      '엽기떡볶이',
      '버스비',
      '택시비',
      '택시비',
      '할매국밥',
      '네이버 클라우드 플랫폼',
      '버스비',
      '공차',
      '중국집',
      '도네이션',
      '마왕족발',
      '소설책',
      '버스비',
      '도네이션',
      '네이버 클라우드 플랫폼',
      '도네이션',
      '엽기떡볶이',
      '홈플러스',
      '도네이션',
      '할매국밥',
      '샴푸',
      '맘스터치',
      '통신요금',
      '별풍선',
      '막걸리',
      '네이버 클라우드 플랫폼',
      '스타벅스',
      '홈플러스',
      '파리바게트',
      '별풍선',
      '버스비',
      '롯데월드',
      '엽기떡볶이',
      '공차',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '할매국밥',
      '인프런',
      '장례식장',
      '택시비',
      '롯데월드',
      '할매국밥',
      '영화',
      '샴푸',
      '파리바게트',
      '롯데월드',
      '도네이션',
      '별풍선',
      '공차',
      '스타벅스',
      '공차',
      '공차',
      '택시비',
      '버스비',
      '소설책',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '병원비',
      '인프런',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '통신요금',
      '별풍선',
      '장례식장',
      '롯데월드',
      '공차',
      '통신요금',
      '엽기떡볶이',
      '롯데월드',
      '택시비',
      '축의금',
      '축의금',
      '병원비',
      '병원비',
      '막걸리',
      '이마트',
      '영화',
      '호식이두마리치킨',
      '인프런',
      '맘스터치',
      '할매국밥',
      '이마트',
      '엽기떡볶이',
      '롯데월드',
      '축의금',
      '샴푸',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '소설책',
      '별풍선',
      '야구 관람',
      '마왕족발',
      '네이버 클라우드 플랫폼',
      '병원비',
      '샴푸',
      '영화',
      '마왕족발',
      '맘스터치',
      '장례식장',
      '소설책',
      '엽기떡볶이',
      '버스비',
      '택시비',
      '택시비',
      '할매국밥',
      '네이버 클라우드 플랫폼',
      '버스비',
      '공차',
      '중국집',
      '도네이션',
      '마왕족발',
      '소설책',
      '버스비',
      '도네이션',
      '네이버 클라우드 플랫폼',
      '도네이션',
      '엽기떡볶이',
      '홈플러스',
      '도네이션',
      '할매국밥',
      '샴푸',
      '맘스터치',
      '통신요금',
      '별풍선',
      '막걸리',
      '네이버 클라우드 플랫폼',
      '스타벅스',
      '홈플러스',
      '파리바게트',
      '별풍선',
      '버스비',
      '롯데월드',
      '엽기떡볶이',
      '공차',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '할매국밥',
      '인프런',
      '장례식장',
      '택시비',
      '롯데월드',
      '할매국밥',
      '영화',
      '샴푸',
      '파리바게트',
      '롯데월드',
      '도네이션',
      '별풍선',
      '공차',
      '스타벅스',
      '공차',
      '공차',
      '택시비',
      '버스비',
      '소설책',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '병원비',
      '인프런',
      '네이버 클라우드 플랫폼',
      '파리바게트',
      '통신요금',
      '별풍선',
      '장례식장',
      '롯데월드',
      '공차',
      '통신요금',
      '엽기떡볶이',
      '롯데월드',
      '택시비',
      '축의금',
      '축의금',
      '병원비',
      '병원비',
      '막걸리',
      '이마트',
      '영화',
      '호식이두마리치킨',
      '인프런',
      '맘스터치',
      '할매국밥',
      '이마트',
      '엽기떡볶이',
      '롯데월드',
      '축의금',
      '샴푸',
      '네이버 클라우드 플랫폼',
      '샴푸',
      '소설책',
      '별풍선',
      '야구 관람',
      '마왕족발',
      '네이버 클라우드 플랫폼',
    ];
    const date = [
      '2020-06-28 04:40:39',
      '2020-08-02 15:03:30',
      '2020-07-19 22:01:59',
      '2020-11-18 04:47:58',
      '2020-10-12 00:29:10',
      '2020-07-22 05:42:13',
      '2020-09-13 10:15:28',
      '2020-08-07 14:46:25',
      '2020-07-04 22:30:10',
      '2020-10-18 20:12:48',
      '2020-07-06 00:36:16',
      '2020-08-01 07:34:55',
      '2020-08-15 16:13:20',
      '2020-10-11 14:51:10',
      '2020-12-12 22:02:13',
      '2020-07-01 21:39:55',
      '2020-09-25 10:59:28',
      '2020-09-10 01:35:58',
      '2020-09-12 06:03:28',
      '2020-10-19 20:58:47',
      '2020-07-27 21:03:35',
      '2020-08-15 07:38:27',
      '2020-07-25 18:41:08',
      '2020-12-11 23:27:27',
      '2020-07-02 15:45:17',
      '2020-10-03 14:30:29',
      '2020-06-26 11:07:29',
      '2020-09-28 17:53:29',
      '2020-07-07 03:21:23',
      '2020-09-10 00:19:44',
      '2020-09-18 08:58:52',
      '2020-07-26 15:35:15',
      '2020-10-15 15:10:25',
      '2020-11-15 00:24:35',
      '2020-09-11 05:01:31',
      '2020-10-12 09:21:46',
      '2020-11-10 23:23:40',
      '2020-10-22 18:25:55',
      '2020-12-12 23:52:28',
      '2020-12-12 09:53:44',
      '2020-10-14 18:03:17',
      '2020-07-03 12:04:25',
      '2020-11-04 14:40:42',
      '2020-09-09 18:28:23',
      '2020-09-28 20:04:56',
      '2020-09-26 23:56:43',
      '2020-08-23 04:36:52',
      '2020-11-13 18:45:45',
      '2020-08-18 13:27:14',
      '2020-08-16 15:14:36',
      '2020-07-18 03:44:24',
      '2020-12-12 04:22:42',
      '2020-09-26 18:35:45',
      '2020-09-24 14:35:26',
      '2020-07-22 07:29:50',
      '2020-11-03 19:41:12',
      '2020-09-09 20:25:31',
      '2020-08-20 13:59:14',
      '2020-11-26 09:01:36',
      '2020-07-19 02:21:42',
      '2020-07-04 12:05:47',
      '2020-10-27 20:45:15',
      '2020-09-08 16:42:04',
      '2020-09-20 21:48:37',
      '2020-10-10 06:15:27',
      '2020-12-04 08:45:08',
      '2020-11-27 06:14:51',
      '2020-07-18 19:45:35',
      '2020-06-19 11:25:49',
      '2020-08-26 01:34:58',
      '2020-07-18 12:29:25',
      '2020-11-28 12:47:55',
      '2020-09-04 21:00:22',
      '2020-06-25 17:51:57',
      '2020-09-06 09:28:49',
      '2020-11-01 23:09:24',
      '2020-10-07 02:12:48',
      '2020-07-14 21:26:17',
      '2020-11-17 20:04:34',
      '2020-08-24 19:15:22',
      '2020-09-22 15:05:18',
      '2020-11-27 02:41:29',
      '2020-11-03 08:39:57',
      '2020-11-22 03:50:11',
      '2020-09-28 02:13:23',
      '2020-08-03 15:17:17',
      '2020-11-08 23:02:36',
      '2020-08-27 22:43:49',
      '2020-07-25 10:16:26',
      '2020-06-27 12:02:18',
      '2020-11-17 21:48:43',
      '2020-11-07 13:22:29',
      '2020-07-13 03:33:36',
      '2020-11-18 08:38:34',
      '2020-09-21 03:40:53',
      '2020-11-03 07:20:20',
      '2020-09-13 21:26:05',
      '2020-10-08 09:42:58',
      '2020-12-13 16:14:45',
      '2020-07-21 21:07:08',
      '2020-07-19 14:34:45',
      '2020-11-30 14:05:00',
      '2020-11-29 13:34:07',
      '2020-10-06 08:59:54',
      '2020-12-12 15:04:31',
      '2020-08-07 16:56:06',
      '2020-12-08 18:25:07',
      '2020-07-22 10:14:57',
      '2020-09-27 21:34:02',
      '2020-08-05 11:36:25',
      '2020-12-11 20:43:49',
      '2020-12-09 09:21:24',
      '2020-10-19 23:22:04',
      '2020-12-09 07:19:12',
      '2020-07-11 20:35:43',
      '2020-09-03 03:53:15',
      '2020-11-01 01:08:52',
      '2020-12-04 12:28:01',
      '2020-06-23 01:20:43',
      '2020-06-30 13:28:31',
      '2020-11-08 15:12:01',
      '2020-09-11 04:33:36',
      '2020-11-08 15:50:33',
      '2020-11-03 15:41:31',
      '2020-11-01 09:15:16',
      '2020-06-22 15:06:24',
      '2020-09-24 06:39:24',
      '2020-09-20 21:21:01',
      '2020-07-19 01:39:27',
      '2020-07-13 17:17:15',
      '2020-09-29 06:56:45',
      '2020-08-05 06:04:32',
      '2020-10-04 09:52:03',
      '2020-10-22 12:47:29',
      '2020-06-21 03:02:50',
      '2020-08-10 18:58:18',
      '2020-10-08 00:16:45',
      '2020-12-04 20:14:36',
      '2020-11-08 22:25:42',
      '2020-10-06 18:23:45',
      '2020-09-02 20:15:13',
      '2020-12-03 23:24:41',
      '2020-10-21 05:12:20',
      '2020-06-28 17:32:27',
      '2020-07-19 01:11:46',
      '2020-08-20 19:39:40',
      '2020-12-08 23:56:35',
      '2020-07-10 16:50:10',
      '2020-11-27 19:30:30',
      '2020-12-14 05:22:28',
      '2020-11-16 11:48:02',
      '2020-11-03 15:02:28',
      '2020-09-09 12:11:14',
      '2020-08-28 23:43:12',
      '2020-11-26 07:09:31',
      '2020-09-10 05:36:56',
      '2020-06-21 07:41:22',
      '2020-10-15 01:56:36',
      '2020-08-22 08:13:44',
      '2020-10-04 13:01:21',
      '2020-07-20 17:27:58',
      '2020-08-24 08:14:58',
      '2020-11-01 18:42:13',
      '2020-11-28 06:55:13',
      '2020-10-21 20:03:37',
      '2020-07-04 02:28:42',
      '2020-08-06 06:51:59',
      '2020-10-15 05:01:03',
      '2020-06-22 11:43:38',
      '2020-06-27 16:14:08',
      '2020-10-24 12:50:47',
      '2020-08-21 19:05:31',
      '2020-11-04 05:15:20',
      '2020-11-13 18:24:39',
      '2020-11-14 20:42:08',
      '2020-08-07 02:48:05',
      '2020-09-03 23:47:21',
      '2020-10-17 02:17:14',
      '2020-07-04 08:11:11',
      '2020-10-21 04:35:30',
      '2020-07-16 15:26:20',
      '2020-10-01 22:32:20',
      '2020-06-23 09:12:52',
      '2020-07-30 15:46:38',
      '2020-07-16 13:49:26',
      '2020-08-24 14:11:00',
      '2020-09-03 18:53:54',
      '2020-07-29 23:17:53',
      '2020-10-01 12:17:26',
      '2020-08-15 22:26:21',
      '2020-09-28 23:13:58',
      '2020-07-09 22:48:08',
      '2020-08-26 16:10:50',
      '2020-07-12 10:51:18',
      '2020-11-24 12:09:16',
      '2020-12-03 10:45:15',
      '2020-09-22 14:55:20',
      '2020-09-18 06:19:08',
      '2020-10-28 00:12:09',
      '2020-12-14 05:03:17',
      '2020-09-22 05:53:43',
      '2020-07-01 04:56:45',
      '2020-07-10 21:54:39',
      '2020-07-19 01:31:43',
      '2020-12-06 01:40:25',
      '2020-12-10 23:30:31',
      '2020-07-18 04:44:45',
      '2020-09-29 12:17:50',
      '2020-07-26 07:49:45',
      '2020-11-08 06:59:11',
      '2020-08-04 06:45:19',
      '2020-10-22 16:37:33',
      '2020-10-27 04:18:53',
      '2020-07-21 18:33:30',
      '2020-09-18 05:58:24',
      '2020-08-26 14:23:41',
      '2020-08-06 09:07:30',
      '2020-07-21 17:42:47',
      '2020-11-07 00:42:25',
      '2020-08-13 18:00:28',
      '2020-09-04 09:25:48',
      '2020-11-22 06:44:30',
      '2020-09-14 11:05:57',
      '2020-10-18 04:03:49',
      '2020-08-21 00:52:49',
      '2020-11-17 05:04:02',
      '2020-12-08 23:33:18',
      '2020-09-01 04:40:13',
      '2020-11-08 23:58:56',
      '2020-06-24 17:09:31',
      '2020-07-05 08:39:15',
      '2020-10-08 21:41:26',
      '2020-06-28 02:37:01',
      '2020-08-23 12:33:15',
      '2020-09-17 20:46:06',
      '2020-09-13 15:52:52',
      '2020-08-10 18:54:05',
      '2020-08-17 03:02:19',
      '2020-10-15 21:33:15',
      '2020-11-18 03:51:05',
      '2020-09-15 21:46:04',
      '2020-07-21 10:27:38',
      '2020-07-28 23:46:34',
      '2020-09-26 06:29:25',
      '2020-09-10 12:11:47',
      '2020-07-28 14:46:15',
      '2020-10-23 00:40:03',
      '2020-08-25 16:34:23',
      '2020-09-07 14:24:01',
      '2020-10-31 11:18:23',
      '2020-08-03 08:36:56',
      '2020-11-29 17:03:54',
      '2020-10-14 08:23:55',
      '2020-07-11 23:38:12',
      '2020-12-06 15:26:30',
      '2020-11-22 04:13:13',
      '2020-08-14 23:12:34',
      '2020-12-09 11:50:37',
      '2020-08-14 08:43:56',
      '2020-09-14 00:30:28',
      '2020-11-03 22:03:26',
      '2020-11-11 11:44:38',
      '2020-09-01 01:27:26',
      '2020-06-24 20:18:15',
      '2020-09-10 08:45:57',
      '2020-12-16 14:17:08',
      '2020-06-28 02:30:59',
      '2020-12-04 22:24:33',
      '2020-07-09 23:17:14',
      '2020-10-25 07:03:32',
      '2020-07-30 06:47:57',
      '2020-06-25 23:05:08',
      '2020-09-26 08:35:52',
      '2020-10-26 02:14:16',
      '2020-10-29 18:46:48',
      '2020-09-01 14:24:50',
      '2020-10-27 15:59:38',
      '2020-09-27 19:40:22',
      '2020-11-11 22:11:36',
      '2020-10-27 13:46:09',
      '2020-12-08 13:29:52',
      '2020-08-11 00:26:07',
      '2020-07-24 07:04:46',
      '2020-11-01 15:38:41',
      '2020-10-31 05:49:52',
      '2020-12-06 17:12:53',
      '2020-11-10 01:27:31',
      '2020-12-08 05:01:05',
      '2020-11-30 07:00:43',
      '2020-07-29 11:12:37',
      '2020-08-25 08:42:28',
      '2020-11-11 18:18:44',
      '2020-10-09 15:20:06',
      '2020-07-27 05:24:29',
      '2020-08-14 21:14:44',
      '2020-11-04 07:51:19',
      '2020-06-27 04:11:03',
      '2020-09-06 15:05:07',
      '2020-09-24 23:21:18',
      '2020-12-10 05:26:44',
    ];
    const memo = [
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
      null,
      '계획 없는 지출',
      '일단 질렀다',
      '싸게 샀다!',
      '돈을 많이 벌자',
      null,
      '할인중이었음',
      '자기 계발',
      '기억이 안 남',
      '계획된 지출',
      '충동구매',
      '내가 왜..',
      '난 오늘만 산다',
      '하하하',
      '돈보다 행복이 우선이다',
      '아껴쓰자',
      '너무 비싸게 샀음',
      null,
      '너무 많이 쓴듯..?',
      '드디어 샀다 ㅎㅎ',
    ];

    // eslint-disable-next-line camelcase
    const account_id = [1, 2, 3, 4, 1, 2, 3, 4, 1, 2];
    const accountList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
    // eslint-disable-next-line camelcase
    const accountbook_id = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
    // eslint-disable-next-line camelcase
    const expenditure_category_id = [3, 3, 6, 1, 3, 2, 5, 1, 2, 2];
    const expenditureList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];
    // eslint-disable-next-line camelcase
    const created_at = [];
    // eslint-disable-next-line camelcase
    const deleted_at = [];
    for (let i = 0; i < 300; i += 1) {
      deleted_at.push(null);
      created_at.push(new Date());
    }

    const bulkData = id.map((item, index) => {
      const accountbookId = 1;
      const expenditureCategoryId = expenditureList[Math.floor(Math.random() * 6)];
      const accountId = accountList[Math.floor(Math.random() * 5)];
      return {
        id: id[index],
        amount: amount[index],
        place: place[index],
        date: date[index],
        memo: memo[index],
        account_id: accountId,
        accountbook_id: accountbookId,
        expenditure_category_id: expenditureCategoryId,
        created_at: created_at[index],
        deleted_at: deleted_at[index],
        updated_at: created_at[index],
      };
    });

    const bulkData2 = id.map((item, index) => {
      const accountbookId = 2;
      const expenditureCategoryId = expenditureList[6 + Math.floor(Math.random() * 6)];
      const accountId = accountList[5 + Math.floor(Math.random() * 5)];
      return {
        id: id[index] + 300,
        amount: amount[index],
        place: place[index],
        date: date[index],
        memo: memo[index],
        account_id: accountId,
        accountbook_id: accountbookId,
        expenditure_category_id: expenditureCategoryId,
        created_at: created_at[index],
        deleted_at: deleted_at[index],
        updated_at: created_at[index],
      };
    });

    const bulkData3 = id.map((item, index) => {
      const accountbookId = 3;
      const expenditureCategoryId = expenditureList[12 + Math.floor(Math.random() * 6)];
      const accountId = accountList[10 + Math.floor(Math.random() * 5)];
      return {
        id: id[index] + 600,
        amount: amount[index],
        place: place[index],
        date: date[index],
        memo: memo[index],
        account_id: accountId,
        accountbook_id: accountbookId,
        expenditure_category_id: expenditureCategoryId,
        created_at: created_at[index],
        deleted_at: deleted_at[index],
        updated_at: created_at[index],
      };
    });

    await queryInterface.bulkInsert('expenditure', [...bulkData, ...bulkData2, ...bulkData3]);
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('expenditure', null, {});
  },
};
